// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using timetable.Models;

namespace timetable.Migrations
{
    [DbContext(typeof(TimetableContext))]
    [Migration("20190605203217_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099");

            modelBuilder.Entity("timetable.Models.Cabinet", b =>
                {
                    b.Property<int>("CabinetId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Auditorium");

                    b.Property<int>("Housing");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("CabinetId");

                    b.ToTable("Cabinets");
                });

            modelBuilder.Entity("timetable.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("SemesterId");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("timetable.Models.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("HalfGroup");

                    b.Property<bool>("Joinable");

                    b.Property<int>("SubjectId");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("LessonId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("timetable.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CabinetId");

                    b.Property<int>("DayOfWeek");

                    b.Property<int>("GroupId");

                    b.Property<int>("LessonId");

                    b.Property<int>("LessonIndex");

                    b.Property<int>("TeacherId");

                    b.Property<string>("Week")
                        .IsRequired();

                    b.HasKey("ScheduleId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("timetable.Models.Semester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("SemesterIndex");

                    b.Property<int>("SpecialtyId");

                    b.HasKey("SemesterId");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("timetable.Models.SemesterLesson", b =>
                {
                    b.Property<int>("SemesterLessonId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Duration");

                    b.Property<int>("LessonId");

                    b.Property<int?>("SemesterId");

                    b.HasKey("SemesterLessonId");

                    b.HasIndex("SemesterId");

                    b.ToTable("SemesterLessons");
                });

            modelBuilder.Entity("timetable.Models.Specialty", b =>
                {
                    b.Property<int>("SpecialtyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("SpecialtyId");

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("timetable.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("timetable.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FullName");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("timetable.Models.TeacherLesson", b =>
                {
                    b.Property<int>("TeacherLessonId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LessonId");

                    b.Property<int>("TeacherId");

                    b.HasKey("TeacherLessonId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherLessons");
                });

            modelBuilder.Entity("timetable.Models.SemesterLesson", b =>
                {
                    b.HasOne("timetable.Models.Semester")
                        .WithMany("SemesterLessons")
                        .HasForeignKey("SemesterId");
                });

            modelBuilder.Entity("timetable.Models.TeacherLesson", b =>
                {
                    b.HasOne("timetable.Models.Teacher")
                        .WithMany("TeacherLessons")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
